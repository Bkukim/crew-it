plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.2.0' // 안정적인 버전 사용
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21) // Java 21 사용
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// TODO: JavaMail 인증(spring에서 제공)
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// TODO: Model Mapper - Entity에서 DTO로 변환하는 라이브러리 (Entity <-> DTO)
	implementation 'org.modelmapper:modelmapper:2.4.2'

	// SQL 출력 결과를 보기 위한 라이브러리 추가
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

	// 오라클 Driver (과거: 11버전) -> 19버전용 라이브러리 추가 설치
	// TODO: 오라클 추가 라이브러리(19c)
	implementation 'com.oracle.database.jdbc:ucp:19.14.0.0'
	implementation 'com.oracle.database.security:oraclepki:19.14.0.0'
	implementation 'com.oracle.database.security:osdt_cert:19.14.0.0'
	implementation 'com.oracle.database.security:osdt_core:19.14.0.0'
	implementation 'com.oracle.database.jdbc:ojdbc11:21.5.0.0'
	implementation 'com.oracle.database.jdbc:ucp:21.5.0.0'
	// Hibernate Core
	implementation 'org.hibernate:hibernate-core:6.2.4.Final' // 최신 버전 사용

	// TODO: JWT 토큰(웹토큰) 설정 라이브러리
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// TODO: Redis - Cache Server
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Spring Boot 3.x 이상에서 QueryDSL 패키지를 정의하는 방법
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Development Tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
